"use strict";(self.webpackChunkreubenliengaard_github_io=self.webpackChunkreubenliengaard_github_io||[]).push([[9116],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>g});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var i=n.createContext({}),p=function(e){var t=n.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(i.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(a),m=r,g=u["".concat(i,".").concat(m)]||u[m]||d[m]||o;return a?n.createElement(g,s(s({ref:t},c),{},{components:a})):n.createElement(g,s({ref:t},c))}));function g(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,s=new Array(o);s[0]=m;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[u]="string"==typeof e?e:r,s[1]=l;for(var p=2;p<o;p++)s[p]=a[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},9401:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var n=a(7462),r=(a(7294),a(3905));const o={sidebar_position:2},s="PostGIS",l={unversionedId:"spatial/spatial-containers/container-postgis",id:"spatial/spatial-containers/container-postgis",title:"PostGIS",description:"Introduction",source:"@site/docs/spatial/spatial-containers/container-postgis.md",sourceDirName:"spatial/spatial-containers",slug:"/spatial/spatial-containers/container-postgis",permalink:"/docs/spatial/spatial-containers/container-postgis",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Network Status Map",permalink:"/docs/spatial/spatial-publishing/publish-network-status-map"},next:{title:"Geoserver",permalink:"/docs/spatial/spatial-containers/container-geoserver"}},i={},p=[{value:"Introduction",id:"introduction",level:2},{value:"What?",id:"what",level:3},{value:"Why?",id:"why",level:3},{value:"How?",id:"how",level:3},{value:"Body",id:"body",level:2},{value:"How?",id:"how-1",level:3},{value:"Download PostGIS image",id:"download-postgis-image",level:3},{value:"Applying the PostGIS image to a container",id:"applying-the-postgis-image-to-a-container",level:3},{value:"Conclusion",id:"conclusion",level:2},{value:"References",id:"references",level:2}],c={toc:p};function u(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"postgis"},"PostGIS"),(0,r.kt)("h2",{id:"introduction"},"Introduction"),(0,r.kt)("h3",{id:"what"},"What?"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"PostGIS is a spatial database extender for PostgreSQL object-relational database. It adds support for geographic objects allowing location queries to be run in SQL.")),(0,r.kt)("h3",{id:"why"},"Why?"),(0,r.kt)("p",null,"Why PostGIS?"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Strong community"),(0,r.kt)("li",{parentName:"ul"},"Robust and stable"),(0,r.kt)("li",{parentName:"ul"},"2d, 3d, and raster support"),(0,r.kt)("li",{parentName:"ul"},"SQL compliant"),(0,r.kt)("li",{parentName:"ul"},"Used by ArcGIS"),(0,r.kt)("li",{parentName:"ul"},"Very capable")),(0,r.kt)("h3",{id:"how"},"How?"),(0,r.kt)("h2",{id:"body"},"Body"),(0,r.kt)("h3",{id:"how-1"},"How?"),(0,r.kt)("p",null,"Create a pod and expose some ports"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"podman pod create -p 8080:8080 -p 5432:5432 -n spatial\n")),(0,r.kt)("p",null,"Confirm the new pod exists"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"podman pod list\n")),(0,r.kt)("h3",{id:"download-postgis-image"},"Download PostGIS image"),(0,r.kt)("p",null,"Pull a postgis image from DockerHub"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"podman pull postgis/postgis\n")),(0,r.kt)("p",null,"select docker source"),(0,r.kt)("h3",{id:"applying-the-postgis-image-to-a-container"},"Applying the PostGIS image to a container"),(0,r.kt)("p",null,"Specify username, password, container name, and create a container."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"podman run -d -t --name postgis --pod spatial -e POSTGRES_PASSWORD=postgres -e POSTGRES_USER=postgres postgis/postgis\n")),(0,r.kt)("p",null,"Auto create a systemd service for the PostGIS container"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"podman generate systemd postgis >/home/reuben/.config/systemd/user/postgis.service\n")),(0,r.kt)("p",null,"Reload user systemd"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"systemctl --user daemon-reload\n")),(0,r.kt)("p",null,"Start and enable the postgis service"),(0,r.kt)("p",null,"Use the user flag for non-root containers."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"systemctl start --user postgis.service\n")),(0,r.kt)("p",null,"Enable it so it will be persistent after reboots."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"systemctl enable --user postgis.service\n")),(0,r.kt)("p",null,"Confirm container is running."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"systemctl status --user postgis.service\n")),(0,r.kt)("h2",{id:"conclusion"},"Conclusion"),(0,r.kt)("h2",{id:"references"},"References"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://hub.docker.com/r/kartoza/postgis/"},"Docker"),"\n",(0,r.kt)("a",{parentName:"p",href:"https://postgis.net/"},"postgis.net")))}u.isMDXComponent=!0}}]);