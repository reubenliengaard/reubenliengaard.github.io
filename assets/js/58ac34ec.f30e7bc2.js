"use strict";(self.webpackChunkreubenliengaard_github_io=self.webpackChunkreubenliengaard_github_io||[]).push([[4912],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=c(n),m=o,h=d["".concat(s,".").concat(m)]||d[m]||p[m]||i;return n?r.createElement(h,a(a({ref:t},u),{},{components:n})):r.createElement(h,a({ref:t},u))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:o,a[1]=l;for(var c=2;c<i;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6973:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=n(7462),o=(n(7294),n(3905));const i={sidebar_position:2},a="Installing Cisco Cloud Wireless Controller with KVM",l={unversionedId:"environmental-monitoring/installing-cisco-cloud-wireless-controller",id:"environmental-monitoring/installing-cisco-cloud-wireless-controller",title:"Installing Cisco Cloud Wireless Controller with KVM",description:"Cisco c9800-CL with KVM",source:"@site/docs/environmental-monitoring/installing-cisco-cloud-wireless-controller.md",sourceDirName:"environmental-monitoring",slug:"/environmental-monitoring/installing-cisco-cloud-wireless-controller",permalink:"/docs/environmental-monitoring/installing-cisco-cloud-wireless-controller",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Provisioning Fedora CoreOS on the Raspberry Pi 4",permalink:"/docs/environmental-monitoring/provisioning-fedora-coreos-on-the-raspberry-pi 4"},next:{title:"Reading sensors with Python",permalink:"/docs/category/reading-sensors-with-python"}},s={},c=[{value:"Cisco c9800-CL with KVM",id:"cisco-c9800-cl-with-kvm",level:2},{value:"What?",id:"what",level:3},{value:"Install KVM",id:"install-kvm",level:3},{value:"Create network bridge",id:"create-network-bridge",level:2},{value:"Install Virtual Machine",id:"install-virtual-machine",level:2},{value:"To exit kvm",id:"to-exit-kvm",level:3},{value:"To destroy",id:"to-destroy",level:3},{value:"Enter these commands on the controller to setup the web gui",id:"enter-these-commands-on-the-controller-to-setup-the-web-gui",level:3},{value:"References",id:"references",level:2}],u={toc:c};function d(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"installing-cisco-cloud-wireless-controller-with-kvm"},"Installing Cisco Cloud Wireless Controller with KVM"),(0,o.kt)("h2",{id:"cisco-c9800-cl-with-kvm"},"Cisco c9800-CL with KVM"),(0,o.kt)("h3",{id:"what"},"What?"),(0,o.kt)("p",null,"The Cisco Catalyst c9800-CL is a wireless controller that is part of the Cisco Catalyst 9800 series. It is designed to manage and secure wireless networks, and provides features such as wireless intrusion prevention, location services, and guest access. The c9800-CL model is a cloud-based controller that is designed to be deployed in a virtual environment, and can be used to manage both on-premises and cloud-based wireless networks."),(0,o.kt)("h3",{id:"install-kvm"},"Install KVM"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo dnf group install --with-optional virtualization\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl start libvirtd && sudo systemctl enable libvirtd\n")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"We use the backing_store option to virt-install --disk to quickly create a new disk image and avoid writing to the original image we have downloaded. This new disk image can be easily thrown away.")),(0,o.kt)("h2",{id:"create-network-bridge"},"Create network bridge"),(0,o.kt)("p",null,"???"),(0,o.kt)("h2",{id:"install-virtual-machine"},"Install Virtual Machine"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"virt-install \\\n--connect=qemu:///system \\\n--os-variant=rhel4.0 \\\n--arch=x86_64 \\\n--cpu host \\\n--console pty,target_type=virtio \\\n--hvm \\\n--import \\\n--name=my_c9k_vm \\\n--disk path=C9800-CL.qcow2,bus=ide,format=qcow2,backing_store \\\n--vcpus=1,sockets=1,cores=1,threads=1 \\\n--ram=4096 \\\n--network=network:br10,model=virtio \\\n--network=network:br10,model=virtio \\\n--network=network:br10,model=virtio  \\\n--noreboot \\\n\n")),(0,o.kt)("h3",{id:"to-exit-kvm"},"To exit kvm"),(0,o.kt)("p",null,"CTRL + ] "),(0,o.kt)("h3",{id:"to-destroy"},"To destroy"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"virsh destroy fcos\nvirsh undefine --remove-all-storage fcos\n")),(0,o.kt)("h3",{id:"enter-these-commands-on-the-controller-to-setup-the-web-gui"},"Enter these commands on the controller to setup the web gui"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ios"},"conf t\nhostname 9800-1\nuser-name admin\n privilege 15\n password 0 Cisco123\n exit\nint gig 1\n no switchport\n ip address 10.10.10.10 255.255.255.0\n no shut\n exit\nint gig 2\n switchport\n switchport mode trunk\n switchport trunk native vlan 77\n no shut\n exit\nint vlan 77\n ip address 192.168.77.10 255.255.255.0\n no shut\n exit\nip route 10.10.10.0 255.255.255.0 10.10.10.1\nip route 0.0.0.0 0.0.0.0 192.168.77.1\nwireless management interface vlan 77\nap dot11 5ghz shutdown \nap dot11 24ghz shutdown \nap country BE,US\nno ap dot11 5ghz shutdown\nno ap dot11 24ghz shutdown\nexit\nwireless config vwlc-ssc key-size 2048 signature-algo sha256 password 0 Cisco123\nconf t\nip name-server 1.1.1.1\nntp server pool.ntp.org\n")),(0,o.kt)("h2",{id:"references"},"References"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://docs.fedoraproject.org/en-US/quick-docs/getting-started-with-virtualization/"},"FedoraVirtGuide")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://www.cisco.com/c/en/us/td/docs/wireless/controller/9800/9800-cloud/installation/b-c9800-cl-install-guide/installing_the_controller_in_kvm_environment.html"},"CiscoGuide")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://youtu.be/6ttSeDTODWM"},"CiscoSal")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://youtu.be/MeDwvj0LxhU"},"wireless_boi")))}d.isMDXComponent=!0}}]);