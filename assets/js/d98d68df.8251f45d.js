"use strict";(self.webpackChunkreubenliengaard_github_io=self.webpackChunkreubenliengaard_github_io||[]).push([[4116],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>y});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(r),f=o,y=p["".concat(s,".").concat(f)]||p[f]||d[f]||i;return r?n.createElement(y,a(a({ref:t},c),{},{components:r})):n.createElement(y,a({ref:t},c))}));function y(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=f;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:o,a[1]=l;for(var u=2;u<i;u++)a[u]=r[u];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},3679:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var n=r(7462),o=(r(7294),r(3905));const i={sidebar_position:1},a="Fedora IOT",l={unversionedId:"linux/linux-hosts/fedora-iot",id:"linux/linux-hosts/fedora-iot",title:"Fedora IOT",description:"Introduction",source:"@site/docs/linux/linux-hosts/fedora-iot.md",sourceDirName:"linux/linux-hosts",slug:"/linux/linux-hosts/fedora-iot",permalink:"/docs/linux/linux-hosts/fedora-iot",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Linux Hosts",permalink:"/docs/category/linux-hosts"},next:{title:"Fedora Server",permalink:"/docs/linux/linux-hosts/fedora-server"}},s={},u=[{value:"Introduction",id:"introduction",level:2},{value:"What?",id:"what",level:3},{value:"Why?",id:"why",level:3},{value:"Body",id:"body",level:2},{value:"How?",id:"how",level:3},{value:"Conclusion",id:"conclusion",level:2},{value:"References",id:"references",level:2}],c={toc:u};function p(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"fedora-iot"},"Fedora IOT"),(0,o.kt)("h2",{id:"introduction"},"Introduction"),(0,o.kt)("h3",{id:"what"},"What?"),(0,o.kt)("h3",{id:"why"},"Why?"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"uses OStree upgrade system"),(0,o.kt)("li",{parentName:"ul"},"fully atomic updates"),(0,o.kt)("li",{parentName:"ul"},"easy update rollbacks"),(0,o.kt)("li",{parentName:"ul"},"updates can be tested server side before deployment"),(0,o.kt)("li",{parentName:"ul"},"works with rpm-ostree hybrid image/package system"),(0,o.kt)("li",{parentName:"ul"},"support for container workflows"),(0,o.kt)("li",{parentName:"ul"},"uses podman"),(0,o.kt)("li",{parentName:"ul"},"uses btrfs for easy snapshots")),(0,o.kt)("h2",{id:"body"},"Body"),(0,o.kt)("h3",{id:"how"},"How?"),(0,o.kt)("h2",{id:"conclusion"},"Conclusion"),(0,o.kt)("h2",{id:"references"},"References"),(0,o.kt)("p",null,"[FedoraIOT]","{",(0,o.kt)("a",{parentName:"p",href:"https://docs.fedoraproject.org/en-US/iot/physical-device-setup/%7D"},"https://docs.fedoraproject.org/en-US/iot/physical-device-setup/}")))}p.isMDXComponent=!0}}]);