"use strict";(self.webpackChunkreubenliengaard_github_io=self.webpackChunkreubenliengaard_github_io||[]).push([[4999],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>m});var r=a(7294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,o=function(e,t){if(null==e)return{};var a,r,o={},n=Object.keys(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var d=r.createContext({}),s=function(e){var t=r.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},c=function(e){var t=s(e.components);return r.createElement(d.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var a=e.components,o=e.mdxType,n=e.originalType,d=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=s(a),g=o,m=u["".concat(d,".").concat(g)]||u[g]||p[g]||n;return a?r.createElement(m,l(l({ref:t},c),{},{components:a})):r.createElement(m,l({ref:t},c))}));function m(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var n=a.length,l=new Array(n);l[0]=g;var i={};for(var d in t)hasOwnProperty.call(t,d)&&(i[d]=t[d]);i.originalType=e,i[u]="string"==typeof e?e:o,l[1]=i;for(var s=2;s<n;s++)l[s]=a[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}g.displayName="MDXCreateElement"},3911:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>n,metadata:()=>i,toc:()=>s});var r=a(7462),o=(a(7294),a(3905));const n={sidebar_position:2},l="Upload Bristol City Council Data",i={unversionedId:"upload/upload-bristol-city-council-data",id:"upload/upload-bristol-city-council-data",title:"Upload Bristol City Council Data",description:"download all spatial data in gejson format",source:"@site/docs/2-upload/upload-bristol-city-council-data.md",sourceDirName:"2-upload",slug:"/upload/upload-bristol-city-council-data",permalink:"/docs/upload/upload-bristol-city-council-data",draft:!1,editUrl:"https://github.com/reubenliengaard/docs/2-upload/upload-bristol-city-council-data.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Upload Ordnance Survey MasterMap Topography",permalink:"/docs/upload/upload-ordnance-survey-mastermap-topography"},next:{title:"Upload Ordnance Survey Satellite Imagery",permalink:"/docs/upload/upload-ordnance-survey-satellite-imagery"}},d={},s=[{value:"download all spatial data in gejson format",id:"download-all-spatial-data-in-gejson-format",level:2},{value:"create new schema for council data",id:"create-new-schema-for-council-data",level:2},{value:"upload bristol council data to new schema in postgis database",id:"upload-bristol-council-data-to-new-schema-in-postgis-database",level:2},{value:"with ogr2ogr",id:"with-ogr2ogr",level:3},{value:"upload data with ogr2ogr",id:"upload-data-with-ogr2ogr",level:2},{value:"or ashtun loader?",id:"or-ashtun-loader",level:3}],c={toc:s};function u(e){let{components:t,...a}=e;return(0,o.kt)("wrapper",(0,r.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"upload-bristol-city-council-data"},"Upload Bristol City Council Data"),(0,o.kt)("h2",{id:"download-all-spatial-data-in-gejson-format"},"download all spatial data in gejson format"),(0,o.kt)("h2",{id:"create-new-schema-for-council-data"},"create new schema for council data"),(0,o.kt)("h2",{id:"upload-bristol-council-data-to-new-schema-in-postgis-database"},"upload bristol council data to new schema in postgis database"),(0,o.kt)("h3",{id:"with-ogr2ogr"},"with ogr2ogr"),(0,o.kt)("p",null,'ogr2ogr -f "PostgreSQL" PG:"dbname=your-database-name user=your-username password=mypassword" /path/to/jour/GeoJSon/file -nln table-name'),(0,o.kt)("h2",{id:"upload-data-with-ogr2ogr"},"upload data with ogr2ogr"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"ogr2ogr \\\n-f \"PostgreSQL\" \\\n-a_srs \"EPSG:27700\" \\\n-t_srs \"EPSG:4326\" \\\n-nln parcels \\\n-progress \\\nPG:\"dbname='gis' host='$ip' port='5432' user='$user'\npassword='$password'\" \\\nLand_Registry_Cadastral_Parcels.gml\n")),(0,o.kt)("h3",{id:"or-ashtun-loader"},"or ashtun loader?"))}u.isMDXComponent=!0}}]);