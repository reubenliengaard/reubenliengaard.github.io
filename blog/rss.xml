<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Reuben Liengaard Blog</title>
        <link>https://reubenliengaard.github.io/blog</link>
        <description>Reuben Liengaard Blog</description>
        <lastBuildDate>Wed, 04 May 2022 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Designing Hardware for Mounting Wireless Equipment on Marquees]]></title>
            <link>https://reubenliengaard.github.io/blog/designing-hardware-for-mounting-wireless-hardware-equiptment-on-marquees</link>
            <guid>designing-hardware-for-mounting-wireless-hardware-equiptment-on-marquees</guid>
            <pubDate>Wed, 04 May 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[Wireless access points and point-to-point links are installed on the aluminum extrusion structural elements of outdoor event marquees using a system that utilizes a keeder rail. This rail accommodates a cylindrical metal piece with a threaded hole drilled perpendicular to its length. This metal piece can slide along the keeder rail and be secured in place by turning a large, flat disk with a threaded hole in the center to tighten it in. This setup supports a pipe clamp that fits standard aluminum poles. Two of these are used per pole, to securly anchor the pole vertically on the side of the tent.]]></description>
            <content:encoded><![CDATA[<p>Wireless access points and point-to-point links are installed on the aluminum extrusion structural elements of outdoor event marquees using a system that utilizes a keeder rail. This rail accommodates a cylindrical metal piece with a threaded hole drilled perpendicular to its length. This metal piece can slide along the keeder rail and be secured in place by turning a large, flat disk with a threaded hole in the center to tighten it in. This setup supports a pipe clamp that fits standard aluminum poles. Two of these are used per pole, to securly anchor the pole vertically on the side of the tent.</p><p><img loading="lazy" alt="Docusaurus Plushie" src="/assets/images/clamp-2-e4b9c5f251ca653bb54536f8fbeac9e2.jpg" width="4032" height="3024" class="img_ev3q"></p><p><img loading="lazy" alt="Docusaurus Plushie" src="/assets/images/clamp-3-bf41914d25c1ad3f8d67fd43bece0453.jpg" width="3120" height="4160" class="img_ev3q"></p>]]></content:encoded>
            <category>hola</category>
            <category>docusaurus</category>
        </item>
        <item>
            <title><![CDATA[Wireless Coverage at Manchester Pride - A Heatmap Analysis]]></title>
            <link>https://reubenliengaard.github.io/blog/wireless-coverage-at-manchester-pride</link>
            <guid>wireless-coverage-at-manchester-pride</guid>
            <pubDate>Mon, 06 Sep 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[During this deployment, we faced a physically challenging task. We mounted two sectors on the 18th floor of a tower block that was next to the site. From there, we transmitted the signal to multiple wireless point-to-point stations that were attached to temporary structures and buildings within the site. We also provided indoor wireless coverage in an underground parking garage that was used as one of the event venues. We created a heat map of the wireless signal strength in this area. In addition, we established uplinks at various locations to support ticket booths, CCTV cameras, payment terminals for bars, a production office, and emergency liaison cabins.]]></description>
            <content:encoded><![CDATA[<p>During this deployment, we faced a physically challenging task. We mounted two sectors on the 18th floor of a tower block that was next to the site. From there, we transmitted the signal to multiple wireless point-to-point stations that were attached to temporary structures and buildings within the site. We also provided indoor wireless coverage in an underground parking garage that was used as one of the event venues. We created a heat map of the wireless signal strength in this area. In addition, we established uplinks at various locations to support ticket booths, CCTV cameras, payment terminals for bars, a production office, and emergency liaison cabins.</p>]]></content:encoded>
            <category>hola</category>
            <category>docusaurus</category>
        </item>
        <item>
            <title><![CDATA[Parish House Prices - A Map of Average Sale Prices]]></title>
            <link>https://reubenliengaard.github.io/blog/parish-house-prices</link>
            <guid>parish-house-prices</guid>
            <pubDate>Wed, 01 Sep 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[We used property sale data from the land registry and postal code data from the Ordnance Survey to determine the latitude and longitude coordinates of each house sale. We imported this data into a PostGIS database, ran an SQL query to calculate the average home price for each parish, and used QGIS to visualize the information by coloring the polygons representing each parish based on the average price.]]></description>
            <content:encoded><![CDATA[<p>We used property sale data from the land registry and postal code data from the Ordnance Survey to determine the latitude and longitude coordinates of each house sale. We imported this data into a PostGIS database, ran an SQL query to calculate the average home price for each parish, and used QGIS to visualize the information by coloring the polygons representing each parish based on the average price. </p><p><img loading="lazy" alt="Docusaurus Plushie" src="/assets/images/price-paid-parish-7dab74e8696d5ee03d431495e4fbf360.jpg" width="1630" height="886" class="img_ev3q"></p>]]></content:encoded>
            <category>hello</category>
            <category>docusaurus</category>
        </item>
        <item>
            <title><![CDATA[Modeling a Spherical Solar Concentrator]]></title>
            <link>https://reubenliengaard.github.io/blog/modeling-a-spherical-solar-concentrator</link>
            <guid>modeling-a-spherical-solar-concentrator</guid>
            <pubDate>Sun, 04 Jul 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[Docusaurus Plushie]]></description>
            <content:encoded><![CDATA[<p><img loading="lazy" alt="Docusaurus Plushie" src="/assets/images/solar-concentrator-3-e219fb0426d36846e8be8dc7d33746c2.jpg" width="718" height="521" class="img_ev3q"></p><p>If a mirror is positioned on the surface of a sphere and is perpendicular to a line that extends from the center of the sphere to a point on the surface of the sphere, light from outside the sphere that is directed towards the mirror will be reflected off the mirror's surface and into the center of the sphere.</p><p><img loading="lazy" alt="Docusaurus Plushie" src="/assets/images/solar-concentrator-1-ad93c8af9d3ae3260d0f3868784455c9.jpg" width="4592" height="3448" class="img_ev3q"></p><p><img loading="lazy" alt="Docusaurus Plushie" src="/assets/images/solar-concentrator-4-5274580557a604c66ded0bb0545bc923.jpg" width="1700" height="1610" class="img_ev3q"></p>]]></content:encoded>
            <category>hello</category>
            <category>docusaurus</category>
        </item>
        <item>
            <title><![CDATA[INSPIRE Index Polygon House Prices - A Map of Average Sale Prices]]></title>
            <link>https://reubenliengaard.github.io/blog/inspire-index-polygon-house-prices</link>
            <guid>inspire-index-polygon-house-prices</guid>
            <pubDate>Fri, 02 Jul 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[Prepare prices data]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="prepare-prices-data">Prepare prices data<a class="hash-link" href="#prepare-prices-data" title="Direct link to heading">â€‹</a></h2><p>We combined three separate files containing price paid data into a single file, cleaned and filtered the data by removing quotes, selecting only rows with "GL" followed by a number, printing out only certain columns, adding column names, and deleting rows with null values. We used ogr2ogr to convert a file with cadastral parcel information into a PostgreSQL file, changed the projection from OSGB to WGS84, and imported it into a database. We started a psql session and created empty tables with certain columns in the database. We used the \copy command and SQL JOIN to combine the price and coordinates data based on their shared postcodes, added a column for geometry data, used the latitude and longitude data to create points, and calculated the average value for each of the duplicate polygons. We used QGIS to export the table from the database and modified the layer properties for visual appeal.</p><p><img loading="lazy" alt="Docusaurus Plushie" src="/assets/images/price-paid-parcel-b58fdcacf1b5265bca273e23e59ebb2e.jpg" width="1534" height="787" class="img_ev3q"></p><p>It appears that some of the postal codes are were properly associated with the intended polygons. For the next project, we used use a set of polygons (parishes) with lower resolution to see if this improved the accuracy of the data.</p>]]></content:encoded>
            <category>hello</category>
            <category>docusaurus</category>
        </item>
        <item>
            <title><![CDATA[Constructing a 3D Egg Shape from Regular Polygons]]></title>
            <link>https://reubenliengaard.github.io/blog/constructing-a-3d-egg-shape-from-regular-polygons</link>
            <guid>constructing-a-3d-egg-shape-from-regular-polygons</guid>
            <pubDate>Tue, 09 Mar 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[We were asked by an artist to help find a a geometry which could be used to create a large egg sculpture.]]></description>
            <content:encoded><![CDATA[<p>We were asked by an artist to help find a a geometry which could be used to create a large egg sculpture.</p><p><img loading="lazy" alt="Docusaurus Plushie" src="/assets/images/egg-1-2edd5330f8680fdf901b10dfe36b1e4f.jpg" width="655" height="527" class="img_ev3q"></p><p><img loading="lazy" alt="Docusaurus Plushie" src="/assets/images/egg-2-128d75277af2454dd729a83dce079a5f.jpg" width="1209" height="512" class="img_ev3q"></p>]]></content:encoded>
            <category>hello</category>
            <category>docusaurus</category>
        </item>
        <item>
            <title><![CDATA[Provisioning Cisco Cloud Wireless Controller]]></title>
            <link>https://reubenliengaard.github.io/blog/provisioning-cisco-cloud-wireless-controller</link>
            <guid>provisioning-cisco-cloud-wireless-controller</guid>
            <pubDate>Sat, 06 Mar 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[We installed and configured the Cisco Catalyst c9800-CL wireless controller using KVM (Kernel-based Virtual Machine). The c9800-CL is a cloud-based wireless controller that can be used to manage both on-premises and cloud-based wireless networks, and is a part of the Cisco Catalyst 9800 series. It offers features such as wireless intrusion prevention, location services, and guest access.]]></description>
            <content:encoded><![CDATA[<p>We installed and configured the Cisco Catalyst c9800-CL wireless controller using KVM (Kernel-based Virtual Machine). The c9800-CL is a cloud-based wireless controller that can be used to manage both on-premises and cloud-based wireless networks, and is a part of the Cisco Catalyst 9800 series. It offers features such as wireless intrusion prevention, location services, and guest access.</p><p>To begin, we installed virtualization software and enabled the libvirtd service. Then, we created a network bridge using the brctl command. After that, we used the virt-install command to install the c9800-CL on a new virtual machine, specifying options such as the connection to the virtualization server, the operating system variant, the architecture of the virtual machine, and the CPU type.</p><p>Once the virtual machine was set up and the c9800-CL was installed, we provided a script to configure the controller. This script included steps such as setting the hostname, creating a user account, configuring the Gigabit Ethernet interfaces, creating a VLAN, setting up static routes, shutting down and re-enabling the radio frequencies, and setting the country code. We also configured the virtual wireless LAN controller (VWLC) and set the DNS and NTP servers.</p><p>Finally, we showed you how to access the GUI of the c9800-CL at the specified IP address and go through the zero-day configuration steps to set up a wireless network.</p>]]></content:encoded>
            <category>hola</category>
            <category>docusaurus</category>
        </item>
        <item>
            <title><![CDATA[Truss Connection Node Modeling]]></title>
            <link>https://reubenliengaard.github.io/blog/truss-connection-node-modeling</link>
            <guid>truss-connection-node-modeling</guid>
            <pubDate>Thu, 04 Mar 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[Docusaurus Plushie]]></description>
            <content:encoded><![CDATA[<p><img loading="lazy" alt="Docusaurus Plushie" src="/assets/images/truss-3-c6a73cf924e89c582875520935c6855e.png" width="573" height="324" class="img_ev3q"></p><p>We created a dodecahedron-shaped structural node for a truss, which is a device that joins multiple truss struts together at a single point. The node had 12 pentagonal faces, and each truss strut was attached to the center of one of these faces via a single bolt. This bolt passed through a hole in the center of the end cap of the strut and was secured in place by screwing it into a threaded hole in the center of the dodecahedron face. The node was made of steel and was capable of resisting the forces transmitted through the truss. </p><p><img loading="lazy" alt="Docusaurus Plushie" src="/assets/images/truss-1-262854f9f04c2addb3451e2e0e292058.jpg" width="476" height="442" class="img_ev3q"></p><p>It played a crucial role in distributing loads evenly and maintaining the stability and strength of the truss. The use of a single bolt per strut allowed for a high level of flexibility and adaptability, as the struts could be easily rearranged or removed due to their modular design.</p><p><img loading="lazy" alt="Docusaurus Plushie" src="/assets/images/truss-2-246d90b00e94dc787904ed511746731a.jpg" width="4592" height="3448" class="img_ev3q"></p>]]></content:encoded>
            <category>hola</category>
            <category>docusaurus</category>
        </item>
        <item>
            <title><![CDATA[Creating 3d Buildings From Mastermap With Qgis]]></title>
            <link>https://reubenliengaard.github.io/blog/creating-3d-buildings-from-mastermap-with-qgis</link>
            <guid>creating-3d-buildings-from-mastermap-with-qgis</guid>
            <pubDate>Tue, 02 Feb 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[We can create 3D models of buildings using data from the Ordnance Survey Mastermap Topography Layer, the Building Height Attribute (BHA), and the Environment Agency LiDAR Digital Terrain Model (DTM). The BHA data provides information on the heights of buildings and is available in File Geodatabase format from Digimap. We can visualize the BHA data in 3D using the Qgis2ThreeJS plugin in QGIS. To do this, we must first install the plugin and load the BHA data, DTM data, and any additional desired layers into the QGIS project. We can then use the Qgis2ThreeJS plugin to style the BHA data and create a 3D model by specifying the BHA data and the desired height attribute for extrusion. The resulting 3D model can be saved as an HTML file and viewed in a web browser. When combined with the LiDAR DTM, this data provides a fairly accurate 3D model that can be opened in Grasshopper, a visual programming language and environment that runs within the Rhinoceros 3D CAD application. With the addition of the Ladybug plugin, we can use this 3D model to perform detailed analyses of climate data and create customized, interactive visualizations for environmentally-informed design, such as sunlight studies.]]></description>
            <content:encoded><![CDATA[<p>We can create 3D models of buildings using data from the Ordnance Survey Mastermap Topography Layer, the Building Height Attribute (BHA), and the Environment Agency LiDAR Digital Terrain Model (DTM). The BHA data provides information on the heights of buildings and is available in File Geodatabase format from Digimap. We can visualize the BHA data in 3D using the Qgis2ThreeJS plugin in QGIS. To do this, we must first install the plugin and load the BHA data, DTM data, and any additional desired layers into the QGIS project. We can then use the Qgis2ThreeJS plugin to style the BHA data and create a 3D model by specifying the BHA data and the desired height attribute for extrusion. The resulting 3D model can be saved as an HTML file and viewed in a web browser. When combined with the LiDAR DTM, this data provides a fairly accurate 3D model that can be opened in Grasshopper, a visual programming language and environment that runs within the Rhinoceros 3D CAD application. With the addition of the Ladybug plugin, we can use this 3D model to perform detailed analyses of climate data and create customized, interactive visualizations for environmentally-informed design, such as sunlight studies.</p><p><img loading="lazy" alt="Docusaurus Plushie" src="/assets/images/bha-1-43f5d793112b5e7d965dd45b486ad82e.png" width="849" height="519" class="img_ev3q">
<img loading="lazy" alt="Docusaurus Plushie" src="/assets/images/bha-2-8cbb5ba2a17084da185d97d130f94089.png" width="849" height="519" class="img_ev3q">
<img loading="lazy" alt="Docusaurus Plushie" src="/assets/images/bha-3-02b772b8c9905ff1d1ad5f175ada8c7f.png" width="849" height="519" class="img_ev3q">
<img loading="lazy" alt="Docusaurus Plushie" src="/assets/images/bha-4-ec53deac98415e65bcd3d9a83ce662de.png" width="849" height="519" class="img_ev3q">
<img loading="lazy" alt="Docusaurus Plushie" src="/assets/images/bha-5-0837bbfde76f3cace5346b723ccf3f01.png" width="849" height="519" class="img_ev3q">
<img loading="lazy" alt="Docusaurus Plushie" src="/assets/images/bha-6-8391a5b4741d6b85cb51feabd31d5d9e.png" width="849" height="519" class="img_ev3q">
<img loading="lazy" alt="Docusaurus Plushie" src="/assets/images/bha-7-5dba3500b25db255c1561d822aaddb58.png" width="849" height="519" class="img_ev3q">
<img loading="lazy" alt="Docusaurus Plushie" src="/assets/images/bha-8-0df5a16690d814e3846e2204c1160f06.png" width="849" height="519" class="img_ev3q">
<img loading="lazy" alt="Docusaurus Plushie" src="/assets/images/bha-9-337f5cad895cc88b4703da28a5e97070.png" width="849" height="519" class="img_ev3q">
<img loading="lazy" alt="Docusaurus Plushie" src="/assets/images/bha-10-dfcbbad19705932c13a95718ea657cb5.png" width="849" height="519" class="img_ev3q">
<img loading="lazy" alt="Docusaurus Plushie" src="/assets/images/bha-11-60332f3067091585939f287871665169.png" width="849" height="519" class="img_ev3q">
<img loading="lazy" alt="Docusaurus Plushie" src="/assets/images/bha-12-767c10f258be4ccea3fd505a9fe69224.png" width="1288" height="605" class="img_ev3q"></p><h1>References</h1><p><a href="https://digimap.edina.ac.uk/help/gis/qgis/qgis_bha/" target="_blank" rel="noopener noreferrer">qgis bha</a></p>]]></content:encoded>
            <category>hola</category>
            <category>docusaurus</category>
        </item>
        <item>
            <title><![CDATA[Gifford Circus Cyr Wheel Performances - A Custom Modular Circular Stage]]></title>
            <link>https://reubenliengaard.github.io/blog/gifford-circus-cry-wheel-performances</link>
            <guid>gifford-circus-cry-wheel-performances</guid>
            <pubDate>Tue, 02 Feb 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[We were asked to design and build a circular stage for a Cyr wheel performance in Gifford's Circus. The stage had to have a diameter of 6 meters and be able to be broken down into pieces small enough to fit through the 2.6 meter wide door of the circus tent.]]></description>
            <content:encoded><![CDATA[<p>We were asked to design and build a circular stage for a Cyr wheel performance in Gifford's Circus. The stage had to have a diameter of 6 meters and be able to be broken down into pieces small enough to fit through the 2.6 meter wide door of the circus tent. </p><p><img loading="lazy" alt="Docusaurus Plushie" src="/assets/images/stage-3-f13d41dad830cad645c00222c4afabd5.jpg" width="1018" height="1064" class="img_ev3q"></p><p>It also had to be sturdy enough to support the weight of the performers, but light enough to be easily assembled by two people in a few minutes, meaning each panel could weigh no more than 50kg. The stage had to be flat and level, despite being sited on rough ground, so we had to desig a system for quickly leveling it. The pieces needed to connect securely and align easily without a lip at the join, as this would interfere with the Cyr wheel. We considered many different patterns for the circle and sought a balance between making the pieces small enough to fit through the door and light enough to carry, but not so small that the stage would be difficult or time-consuming to assemble. </p><p><img loading="lazy" alt="Docusaurus Plushie" src="/assets/images/stage-4-367f329abb10ff4d1f0e1eede7a9c0d6.jpg" width="1041" height="773" class="img_ev3q"></p><p>We also had to consider the number of legs needed for stability and the speed of the leveling process. The stage had to be durable enough to withstand the rough handling and moisture of circus life. We researched various composite panels and ultimately chose one made of an XPS core sandwiched between two layers of extra durable fibreglass, with a non slip coating.</p><p>The material was cut into the necessary shapes and a hot wire cutter with a rectangular profile was used to remove the foam from the mating edges, leaving only the outer fibreglass material. Adhesive was applied and aluminum extrusion pressed into the edges of the panels. The aluminum provided protection for the edge, supported the edge to prevent deflection, and provided the slot that accommodated the removable leg structure connecting the panels together. </p><p><img loading="lazy" alt="Docusaurus Plushie" src="/assets/images/stage-7-536a8dc3915c3bc552fc3a732e057602.jpg" width="1041" height="773" class="img_ev3q"></p><p><img loading="lazy" alt="Docusaurus Plushie" src="/assets/images/stage-8-27308a0483995332cca67e02fbdec9fc.jpg" width="1058" height="752" class="img_ev3q"></p><p>The leg structures were placed at the intersection of three panels and had three pieces of steel box section fitted within the aluminum U channels and welded at 120 degree increments to form a three-directional cross. </p><p><img loading="lazy" alt="Docusaurus Plushie" src="/assets/images/stage-2-96efdfde9bce24cd310ea2c85c3adbb5.jpg" width="1011" height="769" class="img_ev3q"></p><p>A hole was left at the intersection, into which a threaded tube was welded. An internal hex bolt or long grub screw with a foot plate on the bottom was threaded into the tube and could be adjusted from above through a small hole in the stage using an allen key bit on an impact driver. This arrangement allowed for a push-fit assembly process that was fast, and the legs were extended until they touched the ground to level the stage. </p><p><img loading="lazy" alt="Docusaurus Plushie" src="/assets/images/stage-6-2cb158e56730a299f2ecd3b9b490e4ac.jpg" width="1059" height="832" class="img_ev3q"></p><p><img loading="lazy" alt="Docusaurus Plushie" src="/assets/images/stage-1-82e129b0df05a3dc89abe4fe84e5cd34.jpg" width="985" height="1547" class="img_ev3q"></p><p>The pieces were held together with inner steel box section curved on the outer curved edge and a large ratchet strap was used to wrap around the entire structure and compress the circle inward, pulling all the pieces together.</p><p><img loading="lazy" alt="Docusaurus Plushie" src="/assets/images/stage-10-ca0b1f0d0eec65bb8455d9793ed7390e.jpg" width="861" height="1302" class="img_ev3q"></p>]]></content:encoded>
            <category>hola</category>
            <category>docusaurus</category>
        </item>
        <item>
            <title><![CDATA[Mapping Wireless Coverage at the Royal Windsor Horse Show with ArcGIS]]></title>
            <link>https://reubenliengaard.github.io/blog/mapping-wireless-coverage-at-the-royal-windsor-horse-show-with-arcgis</link>
            <guid>mapping-wireless-coverage-at-the-royal-windsor-horse-show-with-arcgis</guid>
            <pubDate>Mon, 01 Jul 2019 00:00:00 GMT</pubDate>
            <description><![CDATA[The Royal Windsor Horse Show is the largest outdoor horse show in the UK. We provided connectivity to the staff and trader areas. After deployment, a wireless heat map was created by taking geolocated signal strength readings on a smartphone from all over the site. This data was uploaded into ArcGIS and used to create a heat map, which highlighted areas with weak signal strength or wireless black spots. This heat map was overlaid on a georeferenced site map, with the locations of wireless access points, cable routes, and network switch locations marked.]]></description>
            <content:encoded><![CDATA[<p>The Royal Windsor Horse Show is the largest outdoor horse show in the UK. We provided connectivity to the staff and trader areas. After deployment, a wireless heat map was created by taking geolocated signal strength readings on a smartphone from all over the site. This data was uploaded into ArcGIS and used to create a heat map, which highlighted areas with weak signal strength or wireless black spots. This heat map was overlaid on a georeferenced site map, with the locations of wireless access points, cable routes, and network switch locations marked.</p><p><img loading="lazy" alt="Docusaurus Plushie" src="/assets/images/windsor-2-39e8180d320a26f71bcee791cac177ca.png" width="1034" height="633" class="img_ev3q"></p>]]></content:encoded>
            <category>hola</category>
            <category>docusaurus</category>
        </item>
        <item>
            <title><![CDATA[Tracking Network Hardware Assets at the Isle of Wight Festival]]></title>
            <link>https://reubenliengaard.github.io/blog/tracking-network-hardware-assets-at-the-isle-of-wight-festival</link>
            <guid>tracking-network-hardware-assets-at-the-isle-of-wight-festival</guid>
            <pubDate>Wed, 05 Jun 2019 00:00:00 GMT</pubDate>
            <description><![CDATA[The Isle of Wight Festival 2019 took place at Seaclose Park on the Isle of Wight. It was a large site, covering 3km of arenas and fields. Network cabinets were set up in each arena and connected with miles of fiber optic cable. Each cabinet was connected to multiple ADSL connections that were bonded together. Smaller network switches were located within 100m of the cabinet and provided connectivity within the arena. Locations that were beyond the 100m limit for Ethernet were connected with wireless point-to-point links, either from poles attached to the sides of tents or by mounting wireless sectors on cherry pickers that could beam the signal out across the arena, where it could be picked up at distant locations through wireless point-to-point receivers attached to the sides of tents.]]></description>
            <content:encoded><![CDATA[<p>The Isle of Wight Festival 2019 took place at Seaclose Park on the Isle of Wight. It was a large site, covering 3km of arenas and fields. Network cabinets were set up in each arena and connected with miles of fiber optic cable. Each cabinet was connected to multiple ADSL connections that were bonded together. Smaller network switches were located within 100m of the cabinet and provided connectivity within the arena. Locations that were beyond the 100m limit for Ethernet were connected with wireless point-to-point links, either from poles attached to the sides of tents or by mounting wireless sectors on cherry pickers that could beam the signal out across the arena, where it could be picked up at distant locations through wireless point-to-point receivers attached to the sides of tents.</p><p>This deployment was massive and complex. While we had a site plan and list of locations that needed connectivity, the physical network structure had to be adapted to the site during construction. We had to navigate around obstacles such as roads and areas of the arena that were accessible to the public. Each main cabinet and sub-cabinet needed its own power supply, which we had to coordinate with the electricians on the fly. Sometimes, if they had been to a location before us, we could locate our cabinets near their distribution boxes by following their cables. Other times, they would move the distribution boxes or we would arrive first and they would provide us with one.</p><p>At least one cherry picker, equipped with a pan-tilt-zoom CCTV camera, was stationed within each arena. CCTV cameras were also installed on scaffolding poles, gateway arches, and stage sides. All bars needed connectivity for their payment terminals. WiFi was provided in the crew and camping areas, and temporary offices were equipped with temporary WiFi and VoIP phones for both internal and external communication. This was necessary because the cellular network often becomes overloaded with the high number of people at events.</p><p>We utilized QGIS's 'Align Raster' tool to georeference a high-definition image of the site map. We then uploaded this map to Mapbox and created a basic Leaflet.js web map that used the host phone's geolocation to position a marker on the map. This helped us determine our exact location on the map, as physical landmarks were not always visible since the site was under construction. The map helped us identify which tents required connectivity and aided us in orienting ourselves with the site as we walked around.</p><p>We used the 'Map Marker' app on Android to quickly locate network devices as we deployed them. The devices were categorized as AP (access point), SW (switch), RT (router), PTZ (CCTV), VoIP (phone), PTP (point-to-point wireless), and cable types of CAT5 and Fibre. Since the staff members who investigate faults or retrieve hardware after an event are often different from those who deployed it, it can be difficult to locate the devices. A detailed and up-to-date map that shows the locations and connections of all the devices helps to quickly trace faults in the network, which often requires physically searching through tents to find cables.</p><p>When the event was finished, the map was used to quickly locate and retrieve all the equipment.</p>]]></content:encoded>
            <category>hello</category>
            <category>docusaurus</category>
        </item>
        <item>
            <title><![CDATA[Live Network Map for WOMAD Festival - Visualizing Status and Coverage]]></title>
            <link>https://reubenliengaard.github.io/blog/live-network-map-for-womad-festival</link>
            <guid>live-network-map-for-womad-festival</guid>
            <pubDate>Fri, 10 May 2019 00:00:00 GMT</pubDate>
            <description><![CDATA["We created a web application that requests permission to access the user's location data. When the location of a network device needs to be recorded, the user enters the device's MAC address into the app. This MAC address is checked against a list of available device MAC addresses in the database. If the MAC address exists in the database, it is marked as "deployed" and the coordinates of the user's phone, on which the update was made, are added to the latitude and longitude columns. If the MAC address is entered incorrectly or does not correspond to a device in the database, the app user is notified and asked to enter a different MAC address. Deployed devices are displayed on a map in real-time and can be clicked on to view information about them, such as their device type, MAC address, IP address, or selected for deletion. If a device is selected for deletion, the corresponding value in the "deployment status" column is changed to "false" and the latitude and longitude position values are removed from the latitude and longitude columns."]]></description>
            <content:encoded><![CDATA[<p>"We created a web application that requests permission to access the user's location data. When the location of a network device needs to be recorded, the user enters the device's MAC address into the app. This MAC address is checked against a list of available device MAC addresses in the database. If the MAC address exists in the database, it is marked as "deployed" and the coordinates of the user's phone, on which the update was made, are added to the latitude and longitude columns. If the MAC address is entered incorrectly or does not correspond to a device in the database, the app user is notified and asked to enter a different MAC address. Deployed devices are displayed on a map in real-time and can be clicked on to view information about them, such as their device type, MAC address, IP address, or selected for deletion. If a device is selected for deletion, the corresponding value in the "deployment status" column is changed to "false" and the latitude and longitude position values are removed from the latitude and longitude columns."</p><p>A BASH script was developed to produce fake data for testing the app. One of these scripts, written in Linux shell language, generates a CSV file containing random MAC addresses, asset tags, device models, and locations. This CSV file is then uploaded to the database for testing purposes.</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token shebang important">#!/bin/bash</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token for-or-select variable" style="color:#36acaa">i</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">..</span><span class="token number" style="color:#36acaa">100</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">do</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token assign-left variable" style="color:#36acaa">mac</span><span class="token operator" style="color:#393A34">=</span><span class="token variable" style="color:#36acaa">$(</span><span class="token variable assign-left variable" style="color:#36acaa">c</span><span class="token variable operator" style="color:#393A34">=</span><span class="token variable number" style="color:#36acaa">0</span><span class="token variable punctuation" style="color:#393A34">;</span><span class="token variable keyword" style="color:#00009f">until</span><span class="token variable" style="color:#36acaa"> </span><span class="token variable punctuation" style="color:#393A34">[</span><span class="token variable" style="color:#36acaa"> $c -eq </span><span class="token variable string" style="color:#e3116c">"6"</span><span class="token variable" style="color:#36acaa"> </span><span class="token variable punctuation" style="color:#393A34">]</span><span class="token variable punctuation" style="color:#393A34">;</span><span class="token variable keyword" style="color:#00009f">do</span><span class="token variable" style="color:#36acaa"> </span><span class="token variable builtin class-name" style="color:#36acaa">printf</span><span class="token variable" style="color:#36acaa"> </span><span class="token variable string" style="color:#e3116c">":%02X"</span><span class="token variable" style="color:#36acaa"> </span><span class="token variable punctuation" style="color:#393A34">$((</span><span class="token variable" style="color:#36acaa"> </span><span class="token variable environment constant" style="color:#36acaa">$RANDOM</span><span class="token variable" style="color:#36acaa"> % </span><span class="token variable number" style="color:#36acaa">256</span><span class="token variable" style="color:#36acaa"> </span><span class="token variable punctuation" style="color:#393A34">)</span><span class="token variable" style="color:#36acaa">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token builtin class-name">let</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">c</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">c+1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token keyword" style="color:#00009f">done</span><span class="token operator" style="color:#393A34">|</span><span class="token function" style="color:#d73a49">sed</span><span class="token plain"> s/://</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token assign-left variable" style="color:#36acaa">asset</span><span class="token operator" style="color:#393A34">=</span><span class="token variable" style="color:#36acaa">$((</span><span class="token variable" style="color:#36acaa"> $RANDOM </span><span class="token variable operator" style="color:#393A34">%</span><span class="token variable" style="color:#36acaa"> </span><span class="token variable number" style="color:#36acaa">9999</span><span class="token variable" style="color:#36acaa"> </span><span class="token variable operator" style="color:#393A34">+</span><span class="token variable" style="color:#36acaa"> </span><span class="token variable number" style="color:#36acaa">1000</span><span class="token variable" style="color:#36acaa"> </span><span class="token variable" style="color:#36acaa">))</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token assign-left variable" style="color:#36acaa">location</span><span class="token operator" style="color:#393A34">=</span><span class="token variable" style="color:#36acaa">$(</span><span class="token variable function" style="color:#d73a49">shuf</span><span class="token variable" style="color:#36acaa"> -n </span><span class="token variable number" style="color:#36acaa">1</span><span class="token variable" style="color:#36acaa"> locations.txt</span><span class="token variable" style="color:#36acaa">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token assign-left variable" style="color:#36acaa">model</span><span class="token operator" style="color:#393A34">=</span><span class="token variable" style="color:#36acaa">$(</span><span class="token variable function" style="color:#d73a49">shuf</span><span class="token variable" style="color:#36acaa"> -n </span><span class="token variable number" style="color:#36acaa">1</span><span class="token variable" style="color:#36acaa"> models.txt</span><span class="token variable" style="color:#36acaa">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token builtin class-name">echo</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"</span><span class="token string variable" style="color:#36acaa">$asset</span><span class="token string" style="color:#e3116c">, </span><span class="token string variable" style="color:#36acaa">$mac</span><span class="token string" style="color:#e3116c">, </span><span class="token string variable" style="color:#36acaa">$mod</span><span class="token string" style="color:#e3116c">"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">done</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> dev.csv</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>hello</category>
            <category>docusaurus</category>
        </item>
        <item>
            <title><![CDATA[Identifying Potential Wildlife Corridors]]></title>
            <link>https://reubenliengaard.github.io/blog/identifying-potential-wildlife-corridors</link>
            <guid>identifying-potential-wildlife-corridors</guid>
            <pubDate>Thu, 09 May 2019 00:00:00 GMT</pubDate>
            <description><![CDATA[Docusaurus Plushie]]></description>
            <content:encoded><![CDATA[<p><img loading="lazy" alt="Docusaurus Plushie" src="/assets/images/wildlife-corridors-2-eb49b628a2413b5bc0ee68d7928e2cb7.png" width="1515" height="779" class="img_ev3q"></p><p><img loading="lazy" alt="Docusaurus Plushie" src="/assets/images/wildlife-corridors-2-eb49b628a2413b5bc0ee68d7928e2cb7.png" width="1515" height="779" class="img_ev3q"></p><p>You can see how the edges or roads and railway tracs could be used as wildlife corridors.</p><p><img loading="lazy" alt="Docusaurus Plushie" src="/assets/images/wildlife-corridors-3-c269ec2c78bdda23a3a61fd8e8005f4b.png" width="1515" height="779" class="img_ev3q"></p>]]></content:encoded>
            <category>hello</category>
            <category>docusaurus</category>
        </item>
        <item>
            <title><![CDATA[Wireless Coverage at the Bath Festival - A Heatmap Analysis]]></title>
            <link>https://reubenliengaard.github.io/blog/wireless-coverage-at-the-bath-festival-a-heatmap-analasis</link>
            <guid>wireless-coverage-at-the-bath-festival-a-heatmap-analasis</guid>
            <pubDate>Sun, 08 Apr 2018 00:00:00 GMT</pubDate>
            <description><![CDATA[A small deployment of access points was placed around the tents at the Bath Festival. Each access point was connected to a sector on an adjacent building via a point-to-point wireless link, connected to both a ADSL line and a temporary satellite on the roof. Using an Android app, we collected a series of geolocated signal strength data points and formatted them in Excel. This data was then uploaded into ArcGIS, where a tool was used to create a heat map, which was overlayed over the site plan.]]></description>
            <content:encoded><![CDATA[<p>A small deployment of access points was placed around the tents at the Bath Festival. Each access point was connected to a sector on an adjacent building via a point-to-point wireless link, connected to both a ADSL line and a temporary satellite on the roof. Using an Android app, we collected a series of geolocated signal strength data points and formatted them in Excel. This data was then uploaded into ArcGIS, where a tool was used to create a heat map, which was overlayed over the site plan.</p>]]></content:encoded>
            <category>hola</category>
            <category>docusaurus</category>
        </item>
        <item>
            <title><![CDATA[Flood Risk Assessment of Pudding Brooke]]></title>
            <link>https://reubenliengaard.github.io/blog/flood-risk-assessment-of-pudding-brook</link>
            <guid>flood-risk-assessment-of-pudding-brook</guid>
            <pubDate>Sun, 05 Mar 2017 00:00:00 GMT</pubDate>
            <description><![CDATA[Digital Terrain Model LIDAR tiles were imported into QGIS and used to create contour polygons at 0.25m intervals. A graduated style was applied to color the polygons by their elevation. Potential sites for outbuildings were then selected in appropriate high ground locations.]]></description>
            <content:encoded><![CDATA[<p>Digital Terrain Model LIDAR tiles were imported into QGIS and used to create contour polygons at 0.25m intervals. A graduated style was applied to color the polygons by their elevation. Potential sites for outbuildings were then selected in appropriate high ground locations.</p><p><img loading="lazy" alt="Docusaurus Plushie" src="/assets/images/pudding-brook-d25c192f63cca338f2a181d2f09cd3e2.jpg" width="1112" height="577" class="img_ev3q"></p>]]></content:encoded>
            <category>hola</category>
            <category>docusaurus</category>
        </item>
    </channel>
</rss>