<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Reuben Liengaard Blog</title>
        <link>https://reubenliengaard.github.io/blog</link>
        <description>Reuben Liengaard Blog</description>
        <lastBuildDate>Sun, 04 Jul 2021 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Constructing a 3d egg shape from regular polygons]]></title>
            <link>https://reubenliengaard.github.io/blog/constructing-a-3d-egg-shape-from-regular-polygons</link>
            <guid>constructing-a-3d-egg-shape-from-regular-polygons</guid>
            <pubDate>Sun, 04 Jul 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[Docusaurus Plushie]]></description>
            <content:encoded><![CDATA[<p><img loading="lazy" alt="Docusaurus Plushie" src="/assets/images/egg-1-2edd5330f8680fdf901b10dfe36b1e4f.jpg" width="655" height="527" class="img_ev3q"></p><p><img loading="lazy" alt="Docusaurus Plushie" src="/assets/images/egg-2-128d75277af2454dd729a83dce079a5f.jpg" width="1209" height="512" class="img_ev3q"></p>]]></content:encoded>
            <category>hello</category>
            <category>docusaurus</category>
        </item>
        <item>
            <title><![CDATA[Creating a modular circular stage]]></title>
            <link>https://reubenliengaard.github.io/blog/creating-a-modular-circular-stage</link>
            <guid>creating-a-modular-circular-stage</guid>
            <pubDate>Sun, 04 Jul 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[Docusaurus Plushie]]></description>
            <content:encoded><![CDATA[<p><img loading="lazy" alt="Docusaurus Plushie" src="/assets/images/stage-1-82e129b0df05a3dc89abe4fe84e5cd34.jpg" width="985" height="1547" class="img_ev3q">
<img loading="lazy" alt="Docusaurus Plushie" src="/assets/images/stage-2-96efdfde9bce24cd310ea2c85c3adbb5.jpg" width="1011" height="769" class="img_ev3q">
<img loading="lazy" alt="Docusaurus Plushie" src="/assets/images/stage-3-f13d41dad830cad645c00222c4afabd5.jpg" width="1018" height="1064" class="img_ev3q">
<img loading="lazy" alt="Docusaurus Plushie" src="/assets/images/stage-4-367f329abb10ff4d1f0e1eede7a9c0d6.jpg" width="1041" height="773" class="img_ev3q">
<img loading="lazy" alt="Docusaurus Plushie" src="/assets/images/stage-5-278fc0ade02420ca73add0abde41e7b0.jpg" width="1036" height="1000" class="img_ev3q">
<img loading="lazy" alt="Docusaurus Plushie" src="/assets/images/stage-6-2cb158e56730a299f2ecd3b9b490e4ac.jpg" width="1059" height="832" class="img_ev3q">
<img loading="lazy" alt="Docusaurus Plushie" src="/assets/images/stage-7-536a8dc3915c3bc552fc3a732e057602.jpg" width="1041" height="773" class="img_ev3q">
<img loading="lazy" alt="Docusaurus Plushie" src="/assets/images/stage-8-27308a0483995332cca67e02fbdec9fc.jpg" width="1058" height="752" class="img_ev3q">
<img loading="lazy" alt="Docusaurus Plushie" src="/assets/images/stage-9-dc6b311d324577aeffe08176ad45882d.jpg" width="818" height="870" class="img_ev3q">
<img loading="lazy" alt="Docusaurus Plushie" src="/assets/images/stage-10-ca0b1f0d0eec65bb8455d9793ed7390e.jpg" width="861" height="1302" class="img_ev3q">
<img loading="lazy" alt="Docusaurus Plushie" src="/assets/images/stage-11-7fd1ee6788b580ee27fe6c3a71e25d42.jpg" width="923" height="997" class="img_ev3q"></p>]]></content:encoded>
            <category>hola</category>
            <category>docusaurus</category>
        </item>
        <item>
            <title><![CDATA[House prices paid by parish]]></title>
            <link>https://reubenliengaard.github.io/blog/house-price-paid-parish</link>
            <guid>house-price-paid-parish</guid>
            <pubDate>Sun, 04 Jul 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[Docusaurus Plushie]]></description>
            <content:encoded><![CDATA[<p><img loading="lazy" alt="Docusaurus Plushie" src="/assets/images/price-paid-parish-7dab74e8696d5ee03d431495e4fbf360.jpg" width="1630" height="886" class="img_ev3q"></p><h1>House prices paid by parish</h1><p>To determine the latitude and longitude coordinates of each house sale, we used information from the land registry about the price paid for each house and matched it with postal code data from the Ordnance Survey. We imported this data into a database called PostGIS and used a query written in SQL to calculate the average price of homes in each parish. We then used a software called QGIS to display this information visually by coloring the polygons (shapes) representing each parish based on the average price.</p><h1>Average Price Paid Parish</h1><h2 class="anchor anchorWithStickyNavbar_LWe7" id="download-data">Download data<a class="hash-link" href="#download-data" title="Direct link to heading">​</a></h2><p>We downloaded a CSV file that contained property price data for the past three years, along with the postal code coordinates and boundary line polygons.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ wget bdline_gpkg_gb.zip</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&amp;&amp; unzip bdline_gpkg_gb.zip</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&amp;&amp; cd data</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="import-bdline">Import bdline<a class="hash-link" href="#import-bdline" title="Direct link to heading">​</a></h2><p>We used ogr2ogr to convert a file containing boundary lines (in a format called GeoPackage) into a PostgreSQL file, changed the projection of the data from OSGB1936 to WGS84, and imported it into a database.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">ogr2ogr \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-f "PostgreSQL" \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-a_srs "EPSG:27700" \</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">-t_srs "EPSG:4326" \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-progress PG:"dbname='gis' host='$ip' port='5432' user='$user'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">password='$password'" \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">bdline_gb.gpkg</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="connect-to-server">Connect to server<a class="hash-link" href="#connect-to-server" title="Direct link to heading">​</a></h2><p>Starting a psql instance on the client in order to interact with the database on the server.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">psql -h 192.168.88.10 -U postgres gis</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h1>Create priced paid polygons for every point</h1><p>We used point data that was already in the database from a previous project to create a new polygon for each point that was within the boundaries of a parish. We also added the price paid for each house (the point) to the corresponding polygon.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="select">SELECT<a class="hash-link" href="#select" title="Direct link to heading">​</a></h3><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">parish.geom,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">points.pounds</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">INTO pp_parish</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">FROM</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">parish INNER JOIN points</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ON st_contains(parish.geom, points.geom);</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="find-avarage-point-value-for-duplicate-polygons">Find avarage point value for duplicate polygons<a class="hash-link" href="#find-avarage-point-value-for-duplicate-polygons" title="Direct link to heading">​</a></h2><p>Like in the the previous project, we calculated the average value for each of the duplicate polygons.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">SELECT geom,avg(pounds)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">INTO avg_pp_parish</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">FROM pp_parish</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">GROUP BY geom;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="import-new-price-paid-polygons-to-file">Import new price paid polygons to file<a class="hash-link" href="#import-new-price-paid-polygons-to-file" title="Direct link to heading">​</a></h2><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Qgis &gt; Database &gt; DB Manager &gt; Import Layer/File - Name: pp_parish</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="add-price-paid-polygons-layer-to-qgis">Add price paid polygons layer to Qgis<a class="hash-link" href="#add-price-paid-polygons-layer-to-qgis" title="Direct link to heading">​</a></h2><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Qgis &gt; Layer &gt; Add Layer &gt; Add Vector Layer</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Qgis &gt; Database &gt; DB Manager &gt; Import Layer/File - Name: pp_parish</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Vector Dataset(s): .shp</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="colour-polygons-by-attribute-field">Colour polygons by attribute field<a class="hash-link" href="#colour-polygons-by-attribute-field" title="Direct link to heading">​</a></h2><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Right click: Layer &gt; Properties</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Symbology &gt; Single Symbol: Gradiated</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Vaule: pounds</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Colour Ramp: Spectral</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Invert Colour Ramp</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Segmentation: Equal Interval</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>hello</category>
            <category>docusaurus</category>
        </item>
        <item>
            <title><![CDATA[Manchester Pride - Ruckus wireless heatmap]]></title>
            <link>https://reubenliengaard.github.io/blog/manchester-pride</link>
            <guid>manchester-pride</guid>
            <pubDate>Sun, 04 Jul 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[During this deployment, we faced a physically challenging task. We mounted two sectors on the 18th floor of a tower block that was next to the site. From there, we transmitted the signal to multiple wireless point-to-point stations that were attached to temporary structures and buildings within the site. We also provided indoor wireless coverage in an underground parking garage that was used as one of the event venues. I created a heat map of the wireless signal strength in this area. In addition, we established uplinks at various locations to support ticket booths, CCTV cameras, payment terminals for bars, a production office, and emergency liaison cabins.]]></description>
            <content:encoded><![CDATA[<p>During this deployment, we faced a physically challenging task. We mounted two sectors on the 18th floor of a tower block that was next to the site. From there, we transmitted the signal to multiple wireless point-to-point stations that were attached to temporary structures and buildings within the site. We also provided indoor wireless coverage in an underground parking garage that was used as one of the event venues. I created a heat map of the wireless signal strength in this area. In addition, we established uplinks at various locations to support ticket booths, CCTV cameras, payment terminals for bars, a production office, and emergency liaison cabins.</p>]]></content:encoded>
            <category>hola</category>
            <category>docusaurus</category>
        </item>
        <item>
            <title><![CDATA[Modeling a Spherical Solar Concentrator]]></title>
            <link>https://reubenliengaard.github.io/blog/modeling-a-spherical-solar-concentrator</link>
            <guid>modeling-a-spherical-solar-concentrator</guid>
            <pubDate>Sun, 04 Jul 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[Docusaurus Plushie]]></description>
            <content:encoded><![CDATA[<p><img loading="lazy" alt="Docusaurus Plushie" src="/assets/images/solar-concentrator-1-ad93c8af9d3ae3260d0f3868784455c9.jpg" width="4592" height="3448" class="img_ev3q">
<img loading="lazy" alt="Docusaurus Plushie" src="/assets/images/solar-concentrator-3-e219fb0426d36846e8be8dc7d33746c2.jpg" width="718" height="521" class="img_ev3q">
<img loading="lazy" alt="Docusaurus Plushie" src="/assets/images/solar-concentrator-4-5274580557a604c66ded0bb0545bc923.jpg" width="1700" height="1610" class="img_ev3q"></p><h1>Designing a Spherical Solar Concentrator</h1>]]></content:encoded>
            <category>hello</category>
            <category>docusaurus</category>
        </item>
        <item>
            <title><![CDATA[Modeling a truss connection]]></title>
            <link>https://reubenliengaard.github.io/blog/modeling-a-truss-connection</link>
            <guid>modeling-a-truss-connection</guid>
            <pubDate>Sun, 04 Jul 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[Docusaurus Plushie]]></description>
            <content:encoded><![CDATA[<p><img loading="lazy" alt="Docusaurus Plushie" src="/assets/images/truss-1-262854f9f04c2addb3451e2e0e292058.jpg" width="476" height="442" class="img_ev3q">
<img loading="lazy" alt="Docusaurus Plushie" src="/assets/images/truss-2-246d90b00e94dc787904ed511746731a.jpg" width="4592" height="3448" class="img_ev3q">
<img loading="lazy" alt="Docusaurus Plushie" src="/assets/images/truss-3-c6a73cf924e89c582875520935c6855e.png" width="573" height="324" class="img_ev3q"></p>]]></content:encoded>
            <category>hola</category>
            <category>docusaurus</category>
        </item>
        <item>
            <title><![CDATA[House prices paid parcels]]></title>
            <link>https://reubenliengaard.github.io/blog/house-price-parcels</link>
            <guid>house-price-parcels</guid>
            <pubDate>Fri, 02 Jul 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[Prepare prices data]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="prepare-prices-data">Prepare prices data<a class="hash-link" href="#prepare-prices-data" title="Direct link to heading">​</a></h2><p><img loading="lazy" alt="Docusaurus Plushie" src="/assets/images/price-paid-parcel-b58fdcacf1b5265bca273e23e59ebb2e.jpg" width="1534" height="787" class="img_ev3q"></p><p>We combined three separate files containing price paid data into a single file, removed unnecessary quotes, selected only rows that contained the string "GL" followed by a number between 0 and 9, and printed out only the fourth and second columns. We also added column names and deleted any rows that contained null values.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ cat pp-2018.csv pp-2019.csv pp-2020.csv | tr -d '"' &gt; pp_3year.csv \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&amp;&amp; awk -F"," '/GL+[0-9]/ { print $4 "," $2}' pp_3year.csv &gt; gl_p_3.csv \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&amp;&amp; { echo "postcode, pounds"; cat gl_p_3.csv; } &gt; prices.csv \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&amp;&amp; sed -i '/\\N/d' prices.csv</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="prepare-location-data">Prepare location data<a class="hash-link" href="#prepare-location-data" title="Direct link to heading">​</a></h2><p>We used the same process to clean and filter the data as we did for the price data, except we did not need to concatenate multiple files together.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ awk -F"," '/GL+[0-9]/ { print $1 "," $8 "," $9}' open_postcode_geo.csv &gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">gl_l.csv \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&amp;&amp; { echo "postcode, latitude, longitude"; cat gl_l.csv; } &gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">coordinates.csv \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&amp;&amp; sed -i '/\\N/d' coordinates.csv</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="import-parcels">Import parcels<a class="hash-link" href="#import-parcels" title="Direct link to heading">​</a></h2><p>We used ogr2ogr to convert a file containing cadastral parcel information (in GML format) into a PostgreSQL file, changed the projection of the data from OSGB to WGS84, and imported it into a database.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">ogr2ogr \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-f "PostgreSQL" \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-a_srs "EPSG:27700" \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-t_srs "EPSG:4326" \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-nln parcels \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-progress \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">PG:"dbname='gis' host='$ip' port='5432' user='$user'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">password='$password'" \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Land_Registry_Cadastral_Parcels.gml</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="connect-to-server">Connect to server<a class="hash-link" href="#connect-to-server" title="Direct link to heading">​</a></h2><p>We started a psql session on the client computer to allow us to communicate with the database that is stored on the server.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">psql -h 192.168.88.10 -U postgres gis</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="create-prices-table">Create prices table<a class="hash-link" href="#create-prices-table" title="Direct link to heading">​</a></h2><p>We created a new empty table with a primary key column of type serial (which will automatically increment) and two additional columns: one for text data (postcodes) and one for integer data (pounds).</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">CREATE TABLE prices (</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">p_prices_id serial PRIMARY KEY,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">p_postcode TEXT NOT NULL,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">pounds INTEGER NOT NULL</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">);</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="create-location-table">Create location table<a class="hash-link" href="#create-location-table" title="Direct link to heading">​</a></h2><p>We created a similar empty table for storing location data, but with columns for latitude and longitude rather than a column for pounds.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">CREATE TABLE coordinates (</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">c_id serial PRIMARY KEY,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">c_postcode TEXT NOT NULL,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">latitude FLOAT NOT NULL,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">longitude FLOAT NOT NULL</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">);</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="populate-prices-table">Populate prices table<a class="hash-link" href="#populate-prices-table" title="Direct link to heading">​</a></h2><p>We used the \copy command in psql to import the price data into the new price column in the database.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">\copy prices(p_postcode, pounds) FROM '/home/reuben/Downloads/prices.csv'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">DELIMITER ',' CSV HEADER;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="populate-coordinates-table">Populate coordinates table<a class="hash-link" href="#populate-coordinates-table" title="Direct link to heading">​</a></h2><p>We repeat the process for the coordinates data.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">\copy coordinates(c_postcode, latitude, longitude) FROM</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">'/home/reuben/Downloads/coordinates.csv' DELIMITER ',' CSV HEADER;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h1>Join coordinates and prices into points</h1><p>We used the JOIN command in SQL to create a new table that combines the prices and coordinates data based on their shared postcodes.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="select">SELECT<a class="hash-link" href="#select" title="Direct link to heading">​</a></h3><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">c_id,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">c_postcode,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">latitude,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">longitude,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">pounds</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">INTO points</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">FROM coordinates INNER JOIN prices</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ON coordinates.c_postcode = prices.p_postcode;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h1>Add geometry column to points</h1><p>We added a new column to the table to store geometry data.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">ALTER TABLE points ADD COLUMN geom GEOMETRY(Point, 4326 );</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h1>Update points from coordinates</h1><p>We used the data in the latitude and longitude columns to create points and stored them in the geometry column.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">UPDATE points SET geom = ST_SETSRID(ST_MakePoint(longitude,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">latitude), 4326 );</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h1>Create priced polygons</h1><p>For each point within a polygon, we created a new polygon and added the corresponding price paid for the point to it.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="select-1">SELECT<a class="hash-link" href="#select-1" title="Direct link to heading">​</a></h3><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">c_id,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">parcels.wkb_geometry,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">points.pounds</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">INTO polygons</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">FROM</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">parcels INNER JOIN points</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ON st_contains(parcels.wkb_geometry, points.geom);</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="find-avarage-point-value-for-duplicate-polygons">Find avarage point value for duplicate polygons<a class="hash-link" href="#find-avarage-point-value-for-duplicate-polygons" title="Direct link to heading">​</a></h2><p>We calculated the average value for each of the duplicate polygons.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">SELECT c_id,geom,avg(pounds)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">INTO avg_polygons</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">FROM polygons</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">GROUP BY geom;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="import-new-price-paid-polygons-to-file">Import new price paid polygons to file<a class="hash-link" href="#import-new-price-paid-polygons-to-file" title="Direct link to heading">​</a></h2><p>We used QGIS to export the table from the database.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Qgis &gt; Database &gt; DB Manager &gt; Import Layer/File - Name: avg_polygons</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="add-price-paid-polygons-layer-to-qgis">Add price paid polygons layer to Qgis<a class="hash-link" href="#add-price-paid-polygons-layer-to-qgis" title="Direct link to heading">​</a></h2><p>Displaying the layer in Qgis.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Qgis &gt; Layer &gt; Add Layer &gt; Add Vector Layer</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Qgis &gt; Database &gt; DB Manager &gt; Import Layer/File - Name: avg_polygons</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Vector Dataset(s): .shp</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="colour-polygons-by-attribute-field">Colour polygons by attribute field<a class="hash-link" href="#colour-polygons-by-attribute-field" title="Direct link to heading">​</a></h2><p>We modified the layer properties in order to create a visually appealing effect.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Right click: Layer &gt; Properties</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Symbology &gt; Single Symbol: Graduated</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Value: pounds</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Colour Ramp: Spectral</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Invert Colour Ramp</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Segmentation: Equal Interval</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>It appears that some of the postal codes are not being properly associated with the intended polygons. For the next project, we will use a set of polygons with lower resolution to see if this improves the accuracy of the data.</p>]]></content:encoded>
            <category>hello</category>
            <category>docusaurus</category>
        </item>
        <item>
            <title><![CDATA[Royal Windsor Horse Show  wireless heatmap]]></title>
            <link>https://reubenliengaard.github.io/blog/windsor-horse-show</link>
            <guid>windsor-horse-show</guid>
            <pubDate>Mon, 01 Jul 2019 00:00:00 GMT</pubDate>
            <description><![CDATA[The Royal Windsor Horse Show is the largest outdoor horse show in the UK. We provided connectivity to the staff and trader areas. After deployment, a wireless heat map was created by extensively taking geolocated signal strength readings on a smartphone from all over the site. This data was uploaded into ArcGIS and used to create a heat map, which highlighted areas with weak signal strength or wireless black spots. This heat map was overlaid on a georeferenced site map, with the locations of wireless access points, cable routes, and network switch locations marked.]]></description>
            <content:encoded><![CDATA[<p>The Royal Windsor Horse Show is the largest outdoor horse show in the UK. We provided connectivity to the staff and trader areas. After deployment, a wireless heat map was created by extensively taking geolocated signal strength readings on a smartphone from all over the site. This data was uploaded into ArcGIS and used to create a heat map, which highlighted areas with weak signal strength or wireless black spots. This heat map was overlaid on a georeferenced site map, with the locations of wireless access points, cable routes, and network switch locations marked.</p>]]></content:encoded>
            <category>hola</category>
            <category>docusaurus</category>
        </item>
        <item>
            <title><![CDATA[Isle of Wight Festival Asset Tracking Network Hardware]]></title>
            <link>https://reubenliengaard.github.io/blog/isle-of-wight</link>
            <guid>isle-of-wight</guid>
            <pubDate>Wed, 05 Jun 2019 00:00:00 GMT</pubDate>
            <description><![CDATA[The Isle of Wight Festival 2019 took place at Seaclose Park on the Isle of Wight. It was a large site, covering 3km of arenas and fields. Network cabinets were set up in each arena and connected with miles of fiber optic cable. Each cabinet was connected to multiple ADSL connections that were bonded together. Smaller network switches were located within 100m of the cabinet and provided connectivity within the arena. Locations that were beyond the 100m limit for Ethernet were connected with wireless point-to-point links, either from poles attached to the sides of tents or by mounting wireless sectors on cherry pickers that could beam the signal out across the arena, where it could be picked up at distant locations through wireless point-to-point receivers attached to the sides of tents.]]></description>
            <content:encoded><![CDATA[<p>The Isle of Wight Festival 2019 took place at Seaclose Park on the Isle of Wight. It was a large site, covering 3km of arenas and fields. Network cabinets were set up in each arena and connected with miles of fiber optic cable. Each cabinet was connected to multiple ADSL connections that were bonded together. Smaller network switches were located within 100m of the cabinet and provided connectivity within the arena. Locations that were beyond the 100m limit for Ethernet were connected with wireless point-to-point links, either from poles attached to the sides of tents or by mounting wireless sectors on cherry pickers that could beam the signal out across the arena, where it could be picked up at distant locations through wireless point-to-point receivers attached to the sides of tents.</p><p>This deployment was massive and complex. While we had a site plan and list of locations that needed connectivity, the physical network structure had to be adapted to the site during construction. We had to navigate around obstacles such as roads and areas of the arena that were accessible to the public. Each main cabinet and sub-cabinet needed its own power supply, which we had to coordinate with the electricians on the fly. Sometimes, if they had been to a location before us, we could locate our cabinets near their distribution boxes by following their cables. Other times, they would move the distribution boxes or we would arrive first and they would provide us with one.</p><p><img loading="lazy" alt="Docusaurus Plushie" src="/assets/images/iow-3325f0f9149c141df07e722a42a0281b.png" width="562" height="514" class="img_ev3q"></p><p>At least one cherry picker, equipped with a pan-tilt-zoom CCTV camera, was stationed within each arena. CCTV cameras were also installed on scaffolding poles, gateway arches, and stage sides. All bars needed connectivity for their payment terminals. WiFi was provided in the crew and camping areas, and temporary offices were equipped with temporary WiFi and VoIP phones for both internal and external communication. This was necessary because the cellular network often becomes overloaded with the high number of people at events.</p><p>I utilized QGIS's 'Align Raster' tool to georeference a high-definition image of the site map. I then uploaded this map to Mapbox and created a basic Leaflet.js web map that used the host phone's geolocation to position a marker on the map. This helped us determine our exact location on the map, as physical landmarks were not always visible since the site was under construction. The map helped us identify which tents required connectivity and aided us in orienting ourselves with the site as we walked around.</p><p>We used the 'Map Marker' app on Android to quickly locate network devices as we deployed them. The devices were categorized as AP (access point), SW (switch), router, PTZ (CCTV), VoIP (phone), PTP (point-to-point wireless), and cable types of CAT5 and fiber. Since the staff members who investigate faults or retrieve hardware after an event are often different from those who deployed it, it can be difficult to locate the devices. A detailed and up-to-date map that shows the locations and connections of all the devices helps to quickly trace faults in the network, which often requires physically searching through tents to find cables.</p><p>When the event was finished, the map was used to quickly locate and retrieve all the equipment.</p>]]></content:encoded>
            <category>hello</category>
            <category>docusaurus</category>
        </item>
        <item>
            <title><![CDATA[Live network status map for WOMAD 2020]]></title>
            <link>https://reubenliengaard.github.io/blog/womad</link>
            <guid>womad</guid>
            <pubDate>Fri, 10 May 2019 00:00:00 GMT</pubDate>
            <category>hello</category>
            <category>docusaurus</category>
        </item>
        <item>
            <title><![CDATA[Identify areas of flat terrain which receive the most sun]]></title>
            <link>https://reubenliengaard.github.io/blog/flat-sunny</link>
            <guid>flat-sunny</guid>
            <pubDate>Thu, 09 May 2019 00:00:00 GMT</pubDate>
            <category>hello</category>
            <category>docusaurus</category>
        </item>
        <item>
            <title><![CDATA[Bath Festival - Ruckus wireless heatmap]]></title>
            <link>https://reubenliengaard.github.io/blog/bath-festival</link>
            <guid>bath-festival</guid>
            <pubDate>Sun, 08 Apr 2018 00:00:00 GMT</pubDate>
            <description><![CDATA[A small deployment of access points was placed around the tents at the Bath Festival. Each access point was connected to a sector on an adjacent building via a point-to-point wireless link, connected to both a ADSL line and a temporary satellite on the roof. Using an Android app, I collected a series of geolocated signal strength data points and formatted them in Excel. This data was then uploaded into ArcGIS, where a tool was used to create a heat map, which was overlayed over the site plan.]]></description>
            <content:encoded><![CDATA[<p>A small deployment of access points was placed around the tents at the Bath Festival. Each access point was connected to a sector on an adjacent building via a point-to-point wireless link, connected to both a ADSL line and a temporary satellite on the roof. Using an Android app, I collected a series of geolocated signal strength data points and formatted them in Excel. This data was then uploaded into ArcGIS, where a tool was used to create a heat map, which was overlayed over the site plan.</p>]]></content:encoded>
            <category>hola</category>
            <category>docusaurus</category>
        </item>
        <item>
            <title><![CDATA[AONB Permitted Development]]></title>
            <link>https://reubenliengaard.github.io/blog/aonb-permitted-development</link>
            <guid>aonb-permitted-development</guid>
            <pubDate>Sun, 01 Apr 2018 00:00:00 GMT</pubDate>
            <description><![CDATA[Docusaurus Plushie]]></description>
            <content:encoded><![CDATA[<p><img loading="lazy" alt="Docusaurus Plushie" src="/assets/images/permitted-development-229c7618b9d11677141f5f9adf4bbe51.jpg" width="641" height="523" class="img_ev3q"></p>]]></content:encoded>
            <category>hola</category>
            <category>docusaurus</category>
        </item>
        <item>
            <title><![CDATA[Flood risk analasis for pudding brooke]]></title>
            <link>https://reubenliengaard.github.io/blog/pudding-brook</link>
            <guid>pudding-brook</guid>
            <pubDate>Sun, 05 Mar 2017 00:00:00 GMT</pubDate>
            <description><![CDATA[Digital Terrain Model LIDAR tiles were imported into QGIS and used to create contour polygons at 2m intervals. A graduated style was applied to color the polygons by their elevation. Potential sites for outbuildings were then selected in appropriate high ground locations.]]></description>
            <content:encoded><![CDATA[<p>Digital Terrain Model LIDAR tiles were imported into QGIS and used to create contour polygons at 2m intervals. A graduated style was applied to color the polygons by their elevation. Potential sites for outbuildings were then selected in appropriate high ground locations.</p><p><img loading="lazy" alt="Docusaurus Plushie" src="/assets/images/pudding-brook-d25c192f63cca338f2a181d2f09cd3e2.jpg" width="1112" height="577" class="img_ev3q"></p>]]></content:encoded>
            <category>hola</category>
            <category>docusaurus</category>
        </item>
    </channel>
</rss>